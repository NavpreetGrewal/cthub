# Generated by Django 3.1.6 on 2021-11-23 23:53

from decimal import Decimal
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tfrs.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompliancePeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('display_order', models.IntegerField()),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'compliance_period',
            },
        ),
        migrations.CreateModel(
            name='CreditTrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('number_of_credits', models.IntegerField(validators=[tfrs.validators.CreditTradeNumberOfCreditsValidator])),
                ('fair_market_value_per_credit', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=10, null=True, validators=[tfrs.validators.CreditTradeFairMarketValueValidator])),
                ('trade_effective_date', models.DateField(blank=True, null=True)),
                ('is_rescinded', models.BooleanField(default=False)),
                ('compliance_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='credit_trades', to='tfrs.complianceperiod')),
            ],
            options={
                'db_table': 'credit_trade',
            },
        ),
        migrations.CreateModel(
            name='CreditTradeStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('display_order', models.IntegerField()),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, unique=True)),
                ('description', models.CharField(blank=True, max_length=4000, null=True)),
            ],
            options={
                'db_table': 'credit_trade_status',
            },
        ),
        migrations.CreateModel(
            name='CreditTradeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('display_order', models.IntegerField()),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('the_type', models.CharField(blank=True, max_length=25, null=True, unique=True)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_gov_only_type', models.BooleanField()),
            ],
            options={
                'db_table': 'credit_trade_type',
            },
        ),
        migrations.CreateModel(
            name='CreditTradeZeroReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('display_order', models.IntegerField()),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('reason', models.CharField(max_length=25)),
                ('description', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'credit_trade_zero_reason',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('title', models.CharField(max_length=120)),
                ('milestone', models.CharField(blank=True, max_length=1000, null=True)),
                ('compliance_period', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tfrs.complianceperiod')),
            ],
            options={
                'db_table': 'document',
            },
        ),
        migrations.CreateModel(
            name='DocumentCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('display_order', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=120, null=True, unique=True)),
            ],
            options={
                'db_table': 'document_category',
            },
        ),
        migrations.CreateModel(
            name='DocumentStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('display_order', models.IntegerField()),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True, unique=True)),
            ],
            options={
                'db_table': 'document_status',
            },
        ),
        migrations.CreateModel(
            name='OrganizationActionsType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('display_order', models.IntegerField()),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('the_type', models.CharField(max_length=25, unique=True)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'organization_actions_type',
            },
        ),
        migrations.CreateModel(
            name='OrganizationStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('display_order', models.IntegerField()),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(max_length=25, unique=True)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'organization_status',
            },
        ),
        migrations.CreateModel(
            name='OrganizationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('display_order', models.IntegerField()),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('type', models.CharField(max_length=25, unique=True)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'organization_type',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.CharField(max_length=1000)),
                ('is_government_role', models.BooleanField(default=False)),
                ('display_order', models.IntegerField()),
                ('default_role', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'role',
            },
        ),
        migrations.CreateModel(
            name='TFRSOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('name', models.CharField(max_length=500)),
                ('actions_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='organization_actions_type', to='tfrs.organizationactionstype')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='organization_status', to='tfrs.organizationstatus')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='organization_type', to='tfrs.organizationtype')),
            ],
            options={
                'db_table': 'tfrs_organization',
            },
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('the_type', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='types', to='tfrs.documentcategory')),
            ],
            options={
                'db_table': 'document_type',
            },
        ),
        migrations.CreateModel(
            name='DocumentCreditTrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('credit_trade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tfrs.credittrade')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tfrs.document')),
            ],
            options={
                'db_table': 'document_credit_trade',
                'unique_together': {('credit_trade', 'document')},
            },
        ),
        migrations.AddField(
            model_name='document',
            name='credit_trades',
            field=models.ManyToManyField(through='tfrs.DocumentCreditTrade', to='tfrs.CreditTrade'),
        ),
        migrations.AddField(
            model_name='document',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tfrs.documentstatus'),
        ),
        migrations.AddField(
            model_name='document',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tfrs.documenttype'),
        ),
        migrations.AddField(
            model_name='credittrade',
            name='documents',
            field=models.ManyToManyField(through='tfrs.DocumentCreditTrade', to='tfrs.Document'),
        ),
        migrations.AddField(
            model_name='credittrade',
            name='initiator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='initiator_credit_trades', to='tfrs.tfrsorganization'),
        ),
        migrations.AddField(
            model_name='credittrade',
            name='respondent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='respondent_credit_trades', to='tfrs.tfrsorganization'),
        ),
        migrations.AddField(
            model_name='credittrade',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_trades', to='tfrs.credittradestatus'),
        ),
        migrations.AddField(
            model_name='credittrade',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_trades', to='tfrs.credittradetype'),
        ),
        migrations.AddField(
            model_name='credittrade',
            name='zero_reason',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='credit_trades', to='tfrs.credittradezeroreason'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('cell_phone', models.CharField(blank=True, max_length=50, null=True)),
                ('_display_name', models.CharField(blank=True, db_column='display_name', max_length=500, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='tfrs.tfrsorganization')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
        ),
    ]
